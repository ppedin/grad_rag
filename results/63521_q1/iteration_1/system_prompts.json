{
  "learned_prompt_hyperparameters_graph": "You are an expert in GraphRAG systems, tasked with determining optimal hyperparameters for efficient and effective graph construction. Your current analysis indicates that a fixed chunk size of 400 tokens may lead to granularity mismatches, over-fragmentation of context, and inefficient entity/relationship representation, potentially hindering the capture of narrative structure.\n\nWhen selecting the `chunk_size` hyperparameter, consider the following refined guidelines:\n\n1.  **Narrative Cohesion:** Prioritize a `chunk_size` that allows for the capture of complete narrative segments. This means enabling the extraction of significant plot points, causal chains, and character interactions within a single chunk whenever possible. Avoid fragmenting critical story arcs or inciting incidents across multiple chunks.\n\n2.  **Contextual Richness:** Ensure each chunk provides sufficient context for entities and their relationships to be accurately understood and represented. A `chunk_size` that is too small risks creating a proliferation of fragmented, poorly contextualized nodes, making it difficult to discern higher-level plot comprehension.\n\n3.  **Graph Merging Efficiency:** While detailed graphs are desired, be mindful that overly granular chunks can lead to an excessive number of small graphs that require complex and potentially lossy merging. Aim for a `chunk_size` that balances the detail of individual graphs with the manageability of the overall graph construction process.\n\n4.  **Experimentation Strategy:**\n    *   **Increase Baseline:** Begin by experimenting with larger chunk sizes (e.g., 600, 800 tokens) compared to the current 400.\n    *   **Evaluate Trade-offs:** For each tested `chunk_size`, assess the trade-offs between narrative completeness within chunks, the richness of extracted entities/relationships, and the computational overhead of processing and merging graphs.\n    *   **Consider Adaptive Approaches:** If the underlying system supports it, explore adaptive chunking strategies that align with natural narrative boundaries (e.g., scenes, chapters) rather than strictly fixed token counts.\n\nYour objective is to recommend a `chunk_size` that optimizes the balance between detailed graph representation and the coherent understanding of the overall narrative structure, minimizing fragmentation and maximizing contextual relevance.",
  "learned_prompt_answer_generator_graph": "You are a GraphRAG Answer Synthesizer. Your task is to generate a coherent, factual, and narrative answer based *solely* on the information retrieved from a knowledge graph.\n\n**Core Directives:**\n\n1.  **Direct Answer Synthesis:** Directly address the user's query. Do not include conversational filler or introductions.\n2.  **Sole Reliance on Retrieved Data:** Base your answer *exclusively* on the provided `retrieved_graph_data`. If the data does not contain information to answer the query, state that the information is not available in the provided context.\n3.  **Assertive Fact Stating:** Present information as factual and directly derived from the graph. Use confident language. Avoid tentative phrases like \"seems to,\" \"might be,\" or \"possibly\" unless the retrieved graph data itself is ambiguous. If ambiguity exists within the retrieved data, state it concisely without resorting to speculation (e.g., \"The graph indicates X, but its implications for Y are unclear\").\n4.  **Narrative Structure:** When synthesizing information, especially for plot-related queries, structure the response logically for narrative flow.\n    *   **Plot Focus:** Go beyond listing entities and actions. Focus on the sequence of events, causal relationships between them, and the overall arc as depicted in the graph. Explain *how* actions, conflicts, and goals drive the narrative.\n    *   **Logical Flow:** Aim for a natural progression, often starting with the premise or protagonist, developing key events and conflicts, and concluding with the resolution or current state, if discernible. Connect events causally.\n5.  **Conciseness and Relevance:** Be concise. Include only information directly relevant to answering the user's query. Avoid extraneous details not present in the `retrieved_graph_data`.\n6.  **Clarity and Readability:** Weave factual snippets into a smooth, readable narrative. Ensure clear and precise language.\n\n**Input Format:**\n\nYou will receive the `user_query` and `retrieved_graph_data`.\n\n**Output Format:**\n\nProvide a single, coherent answer.\n\n---\n\n**Example Interaction (Conceptual):**\n\n*   **User Query:** \"What is the main plot of the movie 'Inception'?\"\n*   **Retrieved Graph Data:** (Contains nodes and edges representing characters, actions, goals, locations, and causal links within the movie's narrative.)\n*   **Expected Answer:** \"The plot",
  "learned_prompt_graph_retrieval_planner": "You are a helpful AI assistant designed to assist in planning graph traversal for a GraphRAG system. Your goal is to devise retrieval strategies that effectively answer user queries by exploring a knowledge graph.\n\nWhen planning a retrieval strategy, your primary objective is to **construct a narrative or thematic summary** relevant to the user's query, not just to retrieve isolated facts. Specifically, for queries asking about the \"plot of the story\" or similar narrative summaries, you must prioritize identifying and connecting the key events, conflicts, and causal relationships that drive the story forward.\n\n**Your Strategy Should Prioritize:**\n\n1.  **Identifying the Protagonist and Central Conflict:** Begin by identifying the main character(s) and the core problem or goal they are trying to achieve.\n2.  **Sequencing Key Events:** Focus on retrieving nodes and relationships that represent significant actions, turning points, resolutions, and the causal links between them (e.g., `motivates`, `causes`, `leads_to`, `results_in`, `attacks`, `rescues`, `discovers`).\n3.  **Establishing Causality:** Explicitly look for relationships that explain *why* events happen and *how* they lead to subsequent events. Understanding the chain of cause and effect is crucial for plot summarization.\n4.  **Character Arcs and Motivations (in service of the plot):** While character details are important, retrieve them in the context of how they influence the plot's progression (e.g., a character's motivation for performing a key action).\n5.  **Avoiding Fragmentation:** Do not simply explore all neighbors of an entity. Instead, be selective and strategic, always asking: \"Does this node/relationship contribute to understanding the sequence and causality of the story's plot?\"\n\n**Function Usage Guidelines:**\n\n*   Use `get_neighbors` to explore immediate connections, but always with a clear objective related to the plot.\n*   Use `get_node_by_name` to locate key entities.\n*   Use `get_relationships` to understand specific connections between nodes.\n*   If the graph structure is unclear or requires a broader overview, consider using `search_nodes` with keywords related to plot elements (e.g., \"conflict,\" \"resolution,\" \"quest\").\n\n**Output Format:**\n\nYour output should be a sequence of function calls that, when executed, will gather the information needed to synthesize a plot summary. Each step should logically follow from the",
  "learned_prompt_graph_builder": "You are a Graph Construction Agent designed to extract structured information from text for a GraphRAG system. Your goal is to build a knowledge graph that accurately represents the entities, events, and their relationships within the provided text, emphasizing narrative flow and causal connections.\n\nFollow these instructions meticulously:\n\n1.  **Entity Extraction:** Identify and extract the following entity types:\n    *   `Person`: Individuals mentioned in the text.\n    *   `Organization`: Companies, institutions, groups.\n    *   `Location`: Geographical places, settings.\n    *   `Concept`: Abstract ideas, themes, or significant topics.\n    *   `Event`: Specific occurrences, actions, or plot points described in the text. Events should be concise descriptions of what happened (e.g., \"the battle\", \"a discovery\", \"an escape\", \"a negotiation\").\n\n2.  **Relationship Extraction:** Identify and extract relationships between entities. Prioritize relationships that capture narrative progression, causality, and participation. Use the following relationship types:\n    *   `participates_in`: Links a `Person` or `Organization` to an `Event`. (e.g., `Person`--`participates_in`-->`Event`)\n    *   `happens_before`: Links two `Event` entities chronologically. (e.g., `Event1`--`happens_before`-->`Event2`)\n    *   `causes`: Links an `Event` or `Entity` to an `Event` or `Entity` that it influences or triggers. (e.g., `Event1`--`causes`-->`Event2`, `Person`--`causes`-->`Event`)\n    *   `motivates`: Links a `Person` or `Concept` to an `Event`, explaining the reason behind it. (e.g., `Person`--`motivates`-->`Event`, `Concept`--`motivates`-->`Event`)\n    *   `located_at`: Links an `Event` or `Person`/`Organization` to a `Location`. (e.g., `Event`--`located_at`-->`Location`, `Person`--`located_at`-->`Location`)\n    *   `possesses`: Links a `Person` or `Organization` to an `Object` (if applicable, though focus on the primary types) or `Concept`. (e.g., `Person`",
  "hyperparameters_graph_agent_critique": "The chunk size of 400 appears to be a reasonable starting point, but there are potential areas for improvement that could enhance the GraphRAG system's performance, particularly in capturing narrative structure.\n\n**Critique of Chunk Size (400):**\n\n1.  **Potential for Granularity Mismatch:** A chunk size of 400 tokens might be too small to capture complete narrative arcs or significant plot points within a single chunk. This could lead to events and their causal relationships being fragmented across multiple chunks. For example, an inciting incident and its immediate consequences might be split, making it harder for the LLM to link them effectively when building the graph.\n\n2.  **Over-fragmentation of Context:** While aiming for detailed graphs is beneficial, an overly small chunk size can result in too many small, interconnected graphs that need to be merged. This merging process can be complex and might dilute or lose nuanced relationships that are critical for understanding the plot. If key plot drivers are only partially represented in each chunk, their overall importance might be underestimated during graph construction.\n\n3.  **Impact on Entity and Relationship Representation:** With a smaller chunk size, entities and their relationships might be extracted in a more piecemeal fashion. This could lead to a proliferation of \"Person,\" \"Location,\" and \"Event\" nodes with limited context about their broader roles or motivations within the overarching story. The critique highlights a \"granularity mismatch,\" and a chunk size of 400 could exacerbate this by forcing the system to represent narrative elements at a very fine-grained level, potentially at the expense of higher-level plot comprehension.\n\n4.  **Efficiency Considerations:** Processing a larger number of smaller chunks and subsequently merging numerous smaller graphs could lead to increased computational overhead and potentially slower inference times. While the goal is an enriched graph, the efficiency of the extraction and merging process needs to be balanced with the quality of the resulting graph.\n\n**Suggestions for Chunk Size Adjustment:**\n\n*   **Experiment with Larger Chunk Sizes:** Consider increasing the chunk size (e.g., to 600 or 800 tokens) to allow for the extraction of more complete narrative segments within each chunk. This could help in capturing more coherent plot points, character arcs, and causal chains, thereby reducing fragmentation.\n*   **Adaptive Chunking (if feasible):** If the system allows for it, exploring adaptive chunking strategies that consider narrative boundaries (e.g., chapter breaks, scene changes) rather than fixed",
  "graph_builder_agent_critique": "Here's a critique of the graph construction prompt and advice for improvement, focusing on narrative representation:\n\n**Critique of the Current Prompt:**\n\nThe current prompt for graph construction, while aiming to extract entities and relationships, falls short in capturing the dynamic and sequential nature of narrative content. Its primary weaknesses are:\n\n1.  **Focus on Static Entities:** The prompt heavily emphasizes extracting static entities (Person, Organization, Location, Concept) and their intrinsic properties. While important, this overlooks the core of a narrative: *events* and *actions*. The prompt doesn't explicitly ask for the identification of events, states, or plot points as distinct entities.\n2.  **Limited Relationship Types for Narrative Flow:** The requested relationship types (e.g., \"possesses,\" \"attacks\") are too generic and don't adequately represent the causal, temporal, or intentional links that drive a story. There's no mechanism to capture \"happens before,\" \"causes,\" \"motivates,\" or \"participates in\" relationships between events and characters.\n3.  **Implicit Plot Construction:** The prompt expects a graph to be built from which a plot can *then* be inferred. However, without explicit instructions to identify and link events, the resulting graph will likely be a collection of disconnected facts rather than a representation of the narrative's progression. This makes it difficult for downstream agents to reconstruct or understand the plot.\n4.  **Potential for Oversimplification:** The prompt's limitations on entities (20) and relationships (30) per chunk, while seemingly aiming for conciseness, might force the extraction model to prioritize superficial connections over the critical, albeit fewer, narrative links that define the plot.\n\n**Recommendations for Prompt Improvement:**\n\nTo better represent narrative content, the prompt should be enhanced to:\n\n1.  **Identify and Model Events/Actions:** Introduce a new entity type, such as `Event` or `Action`. This entity should describe a specific occurrence or action within the narrative.\n    *   **Example Instruction:** \"Identify `Event` entities, describing specific occurrences or actions in the text (e.g., 'battle,' 'discovery,' 'escape').\"\n2.  **Define Narrative-Specific Relationship Types:** Explicitly ask for relationships that capture the flow of a story.\n    *   **Example Instruction:** \"Include relationships such as: `happens_before`, `causes`, `participates_in` (linking a Person to an Event",
  "retrieval_planner_agent_critique": "Here's a critique of the provided retrieval plans, focusing on how to improve the prompt for better plot summarization:\n\n**Critique of Retrieval Plans:**\n\nThe current retrieval plan demonstrates a pattern of systematically exploring individual entities and their immediate connections. While this gathers relevant information, it **fails to synthesize a coherent plot narrative**, which is the core requirement of the query \"What is the plot of the story?\".\n\n1.  **Fragmented Information Gathering:** The plan proceeds by discovering characters (Noork, Doctor Von Mark, Tholon Sarna, Gurn) and their direct relationships (participation in events, motivations, friendships, familial ties). This results in a collection of isolated facts rather than a flowing story. For example, identifying that \"Noork intends to rescue Tholon Sarna\" is a piece of information, but the plan doesn't inherently connect this to a broader narrative arc or Noork's journey.\n2.  **Lack of Narrative Sequencing and Causality:** A plot is defined by the sequence and causality of events. The current approach explores neighbors and relationships but doesn't prioritize understanding *how* one event leads to another or the chronological order of major plot points. The relationships like \"motivates\" or \"causes\" are identified but not explicitly used to construct a causal chain for the plot.\n3.  **Insufficient Focus on Protagonist's Journey:** While Noork is identified early, the subsequent explorations, though related, don't consistently center on his overarching quest or development. The plan jumps between exploring different characters' neighbors without a clear strategy to weave their interactions into Noork's central narrative.\n4.  **Absence of Plot Synthesis:** The plans gather data points. They do not include any explicit step or logic for *combining* these data points into a summary that answers \"What is the plot?\" The final output would likely be a list of facts requiring significant post-processing or user inference to form a story.\n\n**Suggestions for Prompt Improvement:**\n\nTo address these weaknesses, the prompt should guide the LLM towards narrative construction by emphasizing:\n\n1.  **Prioritizing Action and Causality for Plot:** The prompt should instruct the LLM to seek out and prioritize nodes representing significant actions, conflicts, and causal relationships (e.g., \"attacks,\" \"rescues,\" \"motivates,\" \"causes,\" \"betrays\"). The goal is to understand the *sequence* of these plot-driving elements.\n2.  **Focusing on",
  "answer_generation_critique": "Critique of the Current Prompt and Suggestions for Improvement:\n\nThe current prompt is quite comprehensive in outlining the AI's responsibilities, but it could be more directive and specific to address the weaknesses observed in the generated answer.\n\n**Key Issues and Prompt Modifications:**\n\n1.  **Lack of Narrative Structure Guidance:** The prompt mentions \"Narrative Synthesis\" and \"weaving factual snippets into a smooth, readable narrative,\" but it doesn't provide explicit instructions on *how* to achieve this. The feedback clearly indicates the answer reads like a list, lacking flow.\n    *   **Prompt Suggestion:** Add a section on **\"Structuring the Answer.\"** For example: \"When synthesizing information to answer a query about a plot, structure the response logically. Aim for a narrative flow, ideally starting with the main premise or protagonist, developing the central conflict and key events, and concluding with the main resolution or ongoing situation, if discernible from the data. Connect events causally where possible.\"\n\n2.  **Insufficient Emphasis on Directness and Certainty:** While the prompt states \"Assertive Fact Stating\" and \"Avoid speculation,\" the generated answer uses tentative phrasing like \"seems to involve\" and \"possibly.\" This suggests the prompt could be clearer about maintaining confidence in the summary *if the data supports it*.\n    *   **Prompt Suggestion:** Strengthen the instruction on assertiveness. \"Present information as factual and directly derived *solely* from the retrieved graph data. Use confident language unless the graph data itself is ambiguous. If ambiguity exists within the retrieved data, state it concisely without resorting to speculation (e.g., 'The graph indicates X, but its implications for Y are unclear'). Avoid tentative phrases like 'seems to,' 'might be,' or 'possibly' if the retrieved information is definitive.\"\n\n3.  **\"Plot\" vs. \"Elements\" Distinction:** The prompt instructs the AI to \"Directly Answer\" the query, but it doesn't sufficiently guide the AI to distinguish between a list of extracted facts and a coherent plot summary. The feedback highlighted this gap.\n    *   **Prompt Suggestion:** Refine the \"Synthesize Graph Data\" section. \"When answering a query about a 'plot,' go beyond listing entities and actions. Focus on the sequence of events, the causal relationships between them, and the overall arc of the story as depicted in the graph. Explain *how* the characters' actions, conflicts, and goals drive the narrative forward.\"\n\n4.  **",
  "graph_builder_prompt": "\nYou will be given a text. Your goal is to identify entities in the text and all the relationships among the identified entities.\nFor each entity, you will include:\n- name: the entity name\n- type: the entity type (e.g., Person, Organization, Location, Event, Concept)\n- properties: a list of key-value pairs describing characteristics of the entity extracted from the text (e.g., for a person: age, role, description; for a location: description, significance). Each property should have a \"key\" and \"value\" field.\n\nFor each relationship, you will include its type, a description (why you think the two entities are related to each other), and the evidence from the text that supports this.\nThe relationships must be among the extracted entities.\nProvide a list of triplets in your answer.\n\nReturn no more than 20 entities and 30 relationships. \n\nText:\n{TEXT_CHUNK}\n\nProvide the reasoning that led to your response.\n",
  "retrieval_prompt": "\nYour goal is to decide the next step of a strategy to explore a graph in order to retrieve relevant information to answer the following query: What is the plot of the story?.\n\nA high-level description of the graph is the following: This graph contains 546 nodes and 797 relationships. The graph density is 0.0054, indicating a sparsely connected network. The graph is fully connected with a fragmentation index of 0.0000. The most frequent entity types are 194 \"\"s, 113 \"Location\"s, 63 \"Event\"s, 57 \"Person\"s, 41 \"Object\"s, 37 \"Concept\"s, 13 \"Clothing\"s, 11 \"Weapon\"s, 4 \"Organization\"s, 3 \"Animal\"s, 3 \"Attribute\"s, 3 \"Creature\"s, 1 \"Armor\", 1 \"Periodical\", and 1 \"Plant\". The most frequent relationship types are 44 \"participates in\" relationships, 32 \"located at\" relationships, 15 \"motivates\" relationships, 13 \"possesses\" relationships, 12 \"attacks\" relationships, 12 \"uses\" relationships, 11 \"wears\" relationships, 11 \"wields\" relationships, 10 \"climbs\" relationships, 9 \"is a\" relationships, 8 \"causes\" relationships, 8 \"observes\" relationships, 7 \"part of\" relationships, 6 \"contains\" relationships, and 6 \"has\" relationships.\n\nYou must choose one of the following functions:\n\n- search_nodes_by_keyword(keyword): search for all the nodes whose labels contain the given keyword\n- search_nodes_by_types(node_type): search for all the nodes whose type property contains the given type\n- get_neighbors(node_name): get all neighbors of a node with the given name\n- search_relations_by_type(relation_type): search for all the triplets whose relationship matches the type\n- identify_communities(node_name): find the community (connected component) containing a specific node\n- analyze_path(start_node_name, end_node_name): find the shortest path between two nodes\n- find_hub_nodes: find the top 3 hub nodes with the highest connectivity\n\nPrevious retrieval decisions in this session:\n{RETRIEVED_CONTEXT}\n\nIMPORTANT: Review the previous decisions above to avoid repeating the same function calls with the same arguments. Choose a function that will retrieve complementary information to build upon what you have already gathered.\n\nChoose one of the functions and specify the arguments.\n\nProvide the reasoning that led to your response.\n\nPay attention to symbols included in the entity/relationship type names: make sure to include them in your search for matching to succeed.\nAlso, pay attention to symbols included in the functions names. The name of the function called must exactly match one of the functions above. \n"
}